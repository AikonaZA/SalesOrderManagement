@page "/orders/new"
@inject HttpClient Http

<EditForm Model="salesOrderRequest" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3>Create New Sales Order</h3>

    <div class="mb-3">
        <label for="orderRef" class="form-label">Order Reference</label>
        <InputText id="orderRef" class="form-control" @bind-Value="salesOrderRequest.SalesOrder.SalesOrderRef" />
    </div>

    <div class="mb-3">
        <label for="orderDate" class="form-label">Order Date</label>
        <InputDate id="orderDate" class="form-control" @bind-Value="salesOrderRequest.SalesOrder.OrderDate" />
    </div>

    <!-- Add more input fields as needed for other properties -->

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private SalesOrderRequestDto salesOrderRequest = new SalesOrderRequestDto
        {
            SalesOrder = new SalesOrderDto
            {
                OrderLines = new List<SalesOrderLineDto>()
            }
        };

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("api/order", salesOrderRequest);
        if (response.IsSuccessStatusCode)
        {
            // Handle success (e.g., redirect or show a success message)
        }
        else
        {
            // Handle failure (e.g., show error messages)
        }
    }
}
